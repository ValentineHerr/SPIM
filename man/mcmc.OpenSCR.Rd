% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.OpenSCR.R
\name{mcmc.OpenSCR}
\alias{mcmc.OpenSCR}
\title{Run MCMC algorithm for Open population SCR model.}
\usage{
mcmc.OpenSCR(data, niter = 2000, nburn = 200, nthin = 1, K = NA,
  M = 200, inits = inits, proppars = NA, jointZ = TRUE,
  keepACs = TRUE, Rcpp = TRUE)
}
\arguments{
\item{data}{a list produced by simOpenSCR or in the same format}

\item{niter}{number of MCMC iterations to run}

\item{nburn}{number of MCMC iterations to discard as burn in}

\item{nthin}{MCMC thinning parameter. Record output on every nthin iterations.  nthin=1 corresponds to no thinning}

\item{M}{The size of the augmented superpopulation}

\item{inits}{a list of user-supplied initial values.}

\item{proppars}{a list of tuning parameters for the proposal distributions}

\item{keepACs}{a logical indicating whether or not to keep the posteriors for z, s}

\item{Rcpp}{a logical indicating whether or not to use Rcpp}
}
\value{
a list with the posteriors for the open population SCR parameters (out), s, and z
}
\description{
This function runs the MCMC algorithm for an open population SCR model.  The data list should have the following elements:
1.  y, a n x J x t capture history where J is the maximum number of traps across years and t is the number of years
2.  X,  a list with elements that consistes of a matrix with the X and Y trap locations in the first two columns for each year.
If the traps do not vary across years, just repeat the same traps in each year
3.  K, a vector of size t indicating how many capture occasions there were in each year
4.  J, a vector of size t indicating how many traps there were in each year
3. either buff or vertices.  buff is the fixed buffer for the traps to produce the state space.  It is applied to the minimum and maximum
X and Y locations across years, producing a square or rectangular state space.  vertices is a matrix with the X and Y coordinates of a polygonal state
space.

inits sets the initial values and determines if parameters are fixed or year-specific. It must have elements "lam0"
"sigma", "gamma", "phi", and "psi".  If there is an element "sigma_t", the parameters of a bivariate normal mobile
activity center model will be estimated.  If length(lam0)=1, a single lam0 will be estimated while if length(lam0)=t,
lam0 will be year-specific.  This goes for sigma, gamma, and phi as well, except for gamma and phi length needs to be t-1
or year-specific paramters.  A smart starting value or psi is (hypothesized) N/M.

proppars is a list containing the tuning parameters for the parameters that use a Metropolis-Hastings update.
It must have elemnts "lam0", "sigma", "gamma", "s2x", "s2y", and "propz". If a parameter is year-specific, it need
the appropriate number of proppars. propz is the number of data augmentation z's to update in years 2,...,t, so it should
be of length t-1.  Increasing propz improves mixing (up to a point) but increases computation time. Finally, if you set
an initial value for sigma_t, you need to provide proppars for "s1x", "s1y", and "sigma_t".
}
\examples{
\dontrun{
library(coda)
###2 years of data,  all parameters fixed, stationary activity centers
t=2
N=100
p0=0.5
lam0=-log(1-p0)
sigma=0.750
phi=0.8
gamma=0.3
buff=2
X=list(expand.grid(4:9,4:9),expand.grid(4:9,4:9)) #Trap XY can vary across years
K=c(10,10) #Number of occasions can vary across years as well
M=250
#Simulate some data
data=simOpenSCR(N=N,phi=phi,gamma=gamma,lam0=lam0,sigma=sigma,K=K,X=X,t=t,M=M,buff=buff,obstype="bernoulli")
inits=list(lam0=lam0,sigma=sigma,gamma=gamma,phi=phi,psi=N[1]/M) #Single initial values for a parameter will estimate a single parameter across years
niter=1000
nburn=0
nthin=1
proppars=list(lam0=0.025,sigma=0.025,gamma=0.1,phi=0.1,s2x=0.2,s2y=0.2,propz=c(30)) #The number of proppars must match the number of initial values
out=mcmc.OpenSCR(data,niter=niter,nburn=nburn, nthin=nthin, M =M, inits=inits,proppars=proppars,Rcpp=TRUE)
plot(mcmc(out$out))

t=3
N=100
p0=0.5
lam0=-log(1-p0)
sigma=0.750
phi=0.7
gamma=0.3
buff=2
X=list(expand.grid(4:9,4:9),expand.grid(4:9,4:9),expand.grid(4:9,4:9)) #Note we need 3 trap objects stuffed into the trap list
K=c(10,10,10) #and 3 numbers of occasions within year
M=425
data=simOpenSCR(N=N,phi=phi,gamma=gamma,lam0=lam0,sigma=sigma,K=K,X=X,t=t,M=M,buff=buff,obstype="bernoulli")
inits=list(lam0=lam0,sigma=sigma,gamma=gamma,phi=phi,psi=N[1]/M)
niter=1000
nburn=0
nthin=1
proppars=list(lam0=0.025,sigma=0.025,gamma=0.1,phi=0.1,s2x=0.2,s2y=0.2,propz=c(30,30)) #Need 1 more propz
out=mcmc.OpenSCR(data,niter=niter,nburn=nburn, nthin=nthin, M =M, inits=inits,proppars=proppars,Rcpp=TRUE)
plot(mcmc(out$out))
summary(mcmc(out$out))

#Now detection function varies by year
t=3
N=100
p0=c(0.4,0.5,0.6) #need 3 of these
lam0=-log(1-p0)
sigma=c(0.75,0.65,0.55) #these, too
phi=0.7
gamma=0.3
buff=2
X=list(expand.grid(4:9,4:9),expand.grid(4:9,4:9),expand.grid(4:9,4:9)) #Note we need 3 trap objects stuffed into the trap list
K=c(10,10,10) #and 3 numbers of occasions within year
M=425
data=simOpenSCR(N=N,phi=phi,gamma=gamma,lam0=lam0,sigma=sigma,K=K,X=X,t=t,M=M,buff=buff,obstype="bernoulli")
inits=list(lam0=lam0,sigma=sigma,gamma=gamma,phi=phi,psi=N[1]/M) #Note now 3 initial values are specivied here
niter=1000
nburn=0
nthin=1
proppars=list(lam0=rep(0.025,3),sigma=rep(0.025,3),gamma=0.1,phi=0.1,s2x=0.2,s2y=0.2,propz=c(30,30)) #Note we need 3 proppars for lam0 and sigma
out=mcmc.OpenSCR(data,niter=niter,nburn=nburn, nthin=nthin, M =M, inits=inits,proppars=proppars,Rcpp=TRUE)
plot(mcmc(out$out))
summary(mcmc(out$out))

#Let's set lam0 and sigma back to fixed and vary gamma and phi
t=3
N=100
p0=0.5
lam0=-log(1-p0)
sigma=0.750
phi=c(0.7,0.8)
gamma=c(0.2,0.3)
buff=2
X=list(expand.grid(4:9,4:9),expand.grid(4:9,4:9),expand.grid(4:9,4:9)) #Note we need 3 trap objects stuffed into the trap list
K=c(10,10,10) #and 3 numbers of occasions within year
M=425 #Not sure if this is still enough...
data=simOpenSCR(N=N,phi=phi,gamma=gamma,lam0=lam0,sigma=sigma,K=K,X=X,t=t,M=M,buff=buff,obstype="bernoulli")
inits=list(lam0=lam0,sigma=sigma,gamma=gamma,phi=phi,psi=N[1]/M) #now phi and gamma are getting 2 inits
niter=1000
nburn=0
nthin=1
proppars=list(lam0=0.025,sigma=0.025,gamma=c(0.1,0.1),phi=c(0.1,0.1),s2x=0.2,s2y=0.2,propz=c(30,30)) #and phi and gamma get 2 proppars
out=mcmc.OpenSCR(data,niter=niter,nburn=nburn, nthin=nthin, M =M, inits=inits,proppars=proppars,Rcpp=TRUE)
plot(mcmc(out$out))
summary(mcmc(out$out))

#Finally, let's set everything back to fixed and do mobile activty centers between years
#We're using a bivariate normal "metamu" model. I think it's actually estimating sigma_t^2. Need to fix this.
t=3
N=100
p0=0.5
lam0=-log(1-p0)
sigma=0.750
sigma_t=0.7#We'll use this to simulate mobile activity centers
phi=0.7
gamma=0.3
buff=2
X=list(expand.grid(4:9,4:9),expand.grid(4:9,4:9),expand.grid(4:9,4:9))
K=c(10,10,10) #and 3 numbers of occasions within year
M=425
data=simOpenSCR(N=N,phi=phi,gamma=gamma,lam0=lam0,sigma=sigma,sigma_t=sigma_t,K=K,X=X,t=t,M=M,buff=buff,obstype="bernoulli")#Note, we're putting sigma_t in now
inits=list(lam0=lam0,sigma=sigma,gamma=gamma,phi=phi,psi=N[1]/M,sigma_t=sigma_t)#Need an init for sigma_t
niter=1000
nburn=0
nthin=1
proppars=list(lam0=0.025,sigma=0.025,gamma=0.1,phi=0.1,s1x=0.05,s1y=0.05,s2x=0.2,s2y=0.2,propz=c(30,30),sigma_t=0.025) #Note there is a proppar for sigma_t and the meta mus
out=mcmc.OpenSCR(data,niter=niter,nburn=nburn, nthin=nthin, M =M, inits=inits,proppars=proppars,Rcpp=TRUE)
plot(mcmc(out$out))
summary(mcmc(out$out))
#Let's look at some activity centers
par(mfrow=c(1,1))
par(ask=FALSE)
idx=1 #which guy to plot
plot(out$s1xout[,idx],out$s1yout[,idx],xlim=c(0,12),ylim=c(0,12)) #meta mu posterior
points(out$s2xout[,idx,1],out$s2yout[,idx,1],col="red")
points(out$s2xout[,idx,2],out$s2yout[,idx,2],col="green")
points(out$s2xout[,idx,3],out$s2yout[,idx,3],col="blue")
#Plot true values
points(data$mu[idx,1],data$mu[idx,2],pch=4,col="yellow",cex=3,lwd=5)
points(data$s[idx,1,1],data$s[idx,1,2],pch=4,col="yellow",lwd=5,cex=3)
points(data$s[idx,2,1],data$s[idx,2,2],pch=4,col="yellow",lwd=5,cex=3)
points(data$s[idx,3,1],data$s[idx,3,2],pch=4,col="yellow",lwd=5,cex=3)

}
}
\author{
Ben Augustine, Richard Chandler
}

